{"version":3,"sources":["components/Profile/Profile.module.css","components/Stats/Stats.module.css","components/Profile/Profile.js","components/RandomColor.js","components/Stats/Stats.js","components/App.js","index.js"],"names":["module","exports","Profile","description","avatar","name","tag","location","stats","listItem","label","quantity","statsSection","title","statList","item","persentage","_ref","followers","views","likes","react_default","a","createElement","className","styles","alt","src","RandomColor","concat","Math","floor","random","Stats","length","map","stat","key","id","style","backgroundColor","percentage","user","App","components_Profile_Profile","components_Stats_Stats","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.3298c982.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__169b9\",\"description\":\"Profile_description__1Us6M\",\"avatar\":\"Profile_avatar__34FvU\",\"name\":\"Profile_name__3ghfd\",\"tag\":\"Profile_tag__1WgK0\",\"location\":\"Profile_location__1gZV-\",\"stats\":\"Profile_stats__2AHO6\",\"listItem\":\"Profile_listItem__3RDDx\",\"label\":\"Profile_label__rk8hi\",\"quantity\":\"Profile_quantity__2XYZ1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsSection\":\"Stats_statsSection__2VszW\",\"title\":\"Stats_title__UbELr\",\"statList\":\"Stats_statList__19_fp\",\"item\":\"Stats_item__WDrsz\",\"label\":\"Stats_label__1I7Ha\",\"persentage\":\"Stats_persentage__2GIMx\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nconst Profile = ({ avatar, name, tag, location, followers, views, likes }) => (\n  <div className={styles.Profile}>\n    <div className={styles.description}>\n      <img className={styles.avatar} alt=\"user avatar\" src={avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li className={styles.listItem}>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{followers}</span>\n      </li>\n      <li className={styles.listItem}>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{views}</span>\n      </li>\n      <li className={styles.listItem}>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n\nexport default Profile;\n","const RandomColor = () => {\n  const color = `rgb(${Math.floor(Math.random() * 256)},${Math.floor(\n    Math.random() * 256,\n  )},${Math.floor(Math.random() * 256)})`;\n  return color;\n};\n\nexport default RandomColor;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Stats.module.css';\nimport RandomColor from '../RandomColor';\n\nconst Stats = ({ title, stats }) => (\n  <section className={styles.statsSection}>\n    {title.length > 0 && <h2 className={styles.title}>{title}</h2>}\n    <ul className={styles.statList}>\n      {stats.map(stat => (\n        <li\n          className={styles.item}\n          key={stat.id}\n          style={{ backgroundColor: `${RandomColor()}` }}\n        >\n          <span className={styles.label}>{stat.label}</span>\n          <span className={styles.persentage}>{stat.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStats.propTypes = {\n  title: PropTypes.string.isRequired,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Stats;\n","import React from 'react';\nimport Profile from './Profile/Profile';\nimport Stats from './Stats/Stats';\n\nconst user = {\n  name: 'Jacques Gluke',\n  tag: '@jgluke',\n  location: 'Ocho Rios, Jamaica',\n  avatar: 'https://s3.amazonaws.com/uifaces/faces/twitter/r_oy/128.jpg',\n  stats: {\n    followers: 5603,\n    views: 4827,\n    likes: 1308,\n  },\n};\n\nconst stats = [\n  { id: 'id-1', label: '.docx', percentage: 22 },\n  { id: 'id-2', label: '.pdf', percentage: 4 },\n  { id: 'id-3', label: '.mp3', percentage: 17 },\n  { id: 'id-4', label: '.psd', percentage: 47 },\n  { id: 'id-5', label: '.pdf', percentage: 10 },\n];\n\nconst App = () => (\n  <div>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      followers={user.stats.followers}\n      views={user.stats.views}\n      likes={user.stats.likes}\n    />\n    <Stats title=\"\" stats={stats} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}