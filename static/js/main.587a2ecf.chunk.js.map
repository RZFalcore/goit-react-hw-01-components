{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/Transactions/Transactions.module.css","components/Profile/Profile.js","components/Statistics/colorRandomizer.js","components/Statistics/Statistics.js","components/FriendList/FriendList.js","components/Transactions/Transactions.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","description","src","alt","label","quantity","followers","views","likes","makeRandomColor","c","length","Math","random","toString","substr","Statistics","title","statistics","statList","map","stat","key","id","item","style","backgroundColor","percentage","defaultProps","FriendList","friends","friendList","isOnline","online","offline","width","Transactions","items","transactionHistory","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.587a2ecf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3DIQv\",\"description\":\"Profile_description__1quW0\",\"avatar\":\"Profile_avatar__oBdN7\",\"name\":\"Profile_name__1h-8r\",\"tag\":\"Profile_tag__1DsId\",\"location\":\"Profile_location__2wwY3\",\"stats\":\"Profile_stats__1VSVN\",\"label\":\"Profile_label__ab0Yf\",\"quantity\":\"Profile_quantity__2xmIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2PPmC\",\"title\":\"Statistics_title__1yV2-\",\"statList\":\"Statistics_statList__5Tzq3\",\"item\":\"Statistics_item__4YF3H\",\"label\":\"Statistics_label__3kc7i\",\"percentage\":\"Statistics_percentage__3Zqi3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3kypO\",\"item\":\"FriendList_item__2BHSx\",\"online\":\"FriendList_online__Cdx9-\",\"offline\":\"FriendList_offline__498Wm FriendList_online__Cdx9-\",\"avatar\":\"FriendList_avatar__Y1JtU\",\"name\":\"FriendList_name__1QR_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"Transactions_transactionHistory__3N84l\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Profile.module.css';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => (\n  <div className={styles.profile}>\n    <div className={styles.description}>\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{stats.followers}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{stats.views}</span>\n      </li>\n      <li>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{stats.likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }),\n};\n\nexport default Profile;\n","export default function makeRandomColor() {\n  var c = '';\n  while (c.length < 6) {\n    c += Math.random()\n      .toString(16)\n      .substr(-6)\n      .substr(-1);\n  }\n  return '#' + c;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport makeRandomColor from './colorRandomizer';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n    <ul className={styles.statList}>\n      {stats.map(stat => (\n        <li\n          key={stat.id}\n          className={styles.item}\n          style={{ backgroundColor: makeRandomColor() }}\n        >\n          <span className={styles.label}>{stat.label}</span>\n          <span className={styles.percentage}>{stat.percentage}%</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: '',\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired,\n  ),\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './FriendList.module.css';\n\nconst FriendList = ({ friends }) => (\n  <>\n    <ul className={styles.friendList}>\n      {friends.map(({ avatar, name, isOnline, id }) => (\n        <li key={id} className={styles.item}>\n          <span className={isOnline ? styles.online : styles.offline}></span>\n          <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n          <p className={styles.name}>{name}</p>\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      id: PropTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Transactions.module.css';\n\nconst Transactions = ({ items }) => (\n  <>\n    <table className={styles.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}</td>\n            <td>{currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </>\n);\n\nTransactions.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Transactions;\n","import React from 'react';\nimport Profile from './Profile/Profile';\nimport Statistics from './Statistics/Statistics';\nimport FriendsList from './FriendList/FriendList';\nimport Transactions from './Transactions/Transactions';\n\nimport user from './data/user.json';\nimport statisticalData from './data/statistical-data.json';\nimport friends from './data/friends.json';\nimport transactions from './data/transactions.json';\n\nconst App = () => (\n  <>\n    <Profile\n      name={user.name}\n      tag={user.tag}\n      location={user.location}\n      avatar={user.avatar}\n      stats={user.stats}\n    />\n    <Statistics title=\"Upload stats\" stats={statisticalData} />\n    <FriendsList friends={friends} />\n    <Transactions items={transactions} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}